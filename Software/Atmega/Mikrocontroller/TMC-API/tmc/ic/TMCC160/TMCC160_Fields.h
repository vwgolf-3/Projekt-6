/*
 *  TMCC160_Fields.h
 *  Author: LK
 *  Generated by MaskShiftConverter (unchecked)
 */

#ifndef TMCC160_FIELDS_H
#define TMCC160_FIELDS_H

#define TMCC160_HARDWARE_TYPE_MASK                      0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_HARDWARE_TYPE_SHIFT                     0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_HARDWARE_VERSION_MASK                   0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_HARDWARE_VERSION_SHIFT                  0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_HARDWARE_DATE_MASK                      0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_HARDWARE_DATE_SHIFT                     0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_HARDWARE_TIME_MASK                      0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_HARDWARE_TIME_SHIFT                     0 // min.: 0, max.: 16777215, default: 0
#define TMCC160_BOOTLOADER_VERSION_MASK                 0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_BOOTLOADER_VERSION_SHIFT                0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_BOOTLOADER_DATE_MASK                    0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_BOOTLOADER_DATE_SHIFT                   0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_BOOTLOADER_TIME_MASK                    0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_BOOTLOADER_TIME_SHIFT                   0 // min.: 0, max.: 16777215, default: 0
#define TMCC160_FIRMWARE_VERSION_MASK                   0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_FIRMWARE_VERSION_SHIFT                  0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_FIRMWARE_DATE_MASK                      0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_FIRMWARE_DATE_SHIFT                     0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_FIRMWARE_TIME_MASK                      0xFFFFFFFF // CHIP_INFO_VALUE //
#define TMCC160_FIRMWARE_TIME_SHIFT                     0 // min.: 0, max.: 16777215, default: 0
#define TMCC160_CHIP_INFO_ADDRESS_MASK                  0xFFFFFFFF // CHIP_INFO_ADDRESS //
#define TMCC160_CHIP_INFO_ADDRESS_SHIFT                 0 // min.: 0, max.: 9, default: 0
#define TMCC160_SUPPLY_VOLTAGE_MASK                     0xFFFF // SUPPLY_VOLTAGE // The actual supply voltage.
#define TMCC160_SUPPLY_VOLTAGE_SHIFT                    0 // min.: 0, max.: 480, default: 0
#define TMCC160_TEMPERATURE_MASK                        0xFFFF // TEMPERATURE // The actual temperature of the motor driver.
#define TMCC160_TEMPERATURE_SHIFT                       0 // min.: -20, max.: 150, default: 0
#define TMCC160_OVERCURRENT_MASK                        0x01 // ERROR_STATUS_FLAGS //
#define TMCC160_OVERCURRENT_SHIFT                       0 // min.: 0, max.: 1, default: 0
#define TMCC160_UNDERVOLTAGE_MASK                       0x02 // ERROR_STATUS_FLAGS //
#define TMCC160_UNDERVOLTAGE_SHIFT                      1 // min.: 0, max.: 1, default: 0
#define TMCC160_OVERVOLTAGE_MASK                        0x04 // ERROR_STATUS_FLAGS //
#define TMCC160_OVERVOLTAGE_SHIFT                       2 // min.: 0, max.: 1, default: 0
#define TMCC160_OVERTEMPERATURE_MASK                    0x08 // ERROR_STATUS_FLAGS //
#define TMCC160_OVERTEMPERATURE_SHIFT                   3 // min.: 0, max.: 1, default: 0
#define TMCC160_MOTORHALTED_MASK                        0x10 // ERROR_STATUS_FLAGS //
#define TMCC160_MOTORHALTED_SHIFT                       4 // min.: 0, max.: 1, default: 0
#define TMCC160_HALLERROR_MASK                          0x20 // ERROR_STATUS_FLAGS //
#define TMCC160_HALLERROR_SHIFT                         5 // min.: 0, max.: 1, default: 0
#define TMCC160_DRIVER_ERROR_MASK                       0x40 // ERROR_STATUS_FLAGS //
#define TMCC160_DRIVER_ERROR_SHIFT                      6 // min.: 0, max.: 1, default: 0
#define TMCC160_INIT_ERROR_MASK                         0x80 // ERROR_STATUS_FLAGS //
#define TMCC160_INIT_ERROR_SHIFT                        7 // min.: 0, max.: 1, default: 0
#define TMCC160_STOP_MODE_MASK                          0x0100 // ERROR_STATUS_FLAGS //
#define TMCC160_STOP_MODE_SHIFT                         8 // min.: 0, max.: 1, default: 0
#define TMCC160_VELOCITY_MODE_MASK                      0x0200 // ERROR_STATUS_FLAGS //
#define TMCC160_VELOCITY_MODE_SHIFT                     9 // min.: 0, max.: 1, default: 0
#define TMCC160_POSITION_MODE_MASK                      0x0400 // ERROR_STATUS_FLAGS //
#define TMCC160_POSITION_MODE_SHIFT                     10 // min.: 0, max.: 1, default: 0
#define TMCC160_TORQUE_MODE_MASK                        0x0800 // ERROR_STATUS_FLAGS //
#define TMCC160_TORQUE_MODE_SHIFT                       11 // min.: 0, max.: 1, default: 0
#define TMCC160_EMERGENCYSTOP_MASK                      0x1000 // ERROR_STATUS_FLAGS //
#define TMCC160_EMERGENCYSTOP_SHIFT                     12 // min.: 0, max.: 1, default: 0
#define TMCC160_FREERUNNING_MASK                        0x2000 // ERROR_STATUS_FLAGS //
#define TMCC160_FREERUNNING_SHIFT                       13 // min.: 0, max.: 1, default: 0
#define TMCC160_POSITION_END_MASK                       0x4000 // ERROR_STATUS_FLAGS //
#define TMCC160_POSITION_END_SHIFT                      14 // min.: 0, max.: 1, default: 0
#define TMCC160_MODULE_INITIALIZED_MASK                 0x8000 // ERROR_STATUS_FLAGS //
#define TMCC160_MODULE_INITIALIZED_SHIFT                15 // min.: 0, max.: 1, default: 0
#define TMCC160_ETHERCAT_TIMEOUT_MASK                   0x010000 // ERROR_STATUS_FLAGS //
#define TMCC160_ETHERCAT_TIMEOUT_SHIFT                  16 // min.: 0, max.: 1, default: 0
#define TMCC160_IIT_EXCEEDED_MASK                       0x020000 // ERROR_STATUS_FLAGS //
#define TMCC160_IIT_EXCEEDED_SHIFT                      17 // min.: 0, max.: 1, default: 0
#define TMCC160_MOTOR_POLE_PAIRS_MASK                   0xFF // MOTOR_POLE_PAIRS // Number of motor poles.
#define TMCC160_MOTOR_POLE_PAIRS_SHIFT                  0 // min.: 2, max.: 254, default: 0
#define TMCC160_HALL_INVERT_MASK                        0xFF // HALL_INVERT // Change hall sensor invert if your motor hall-signals polarity is inverted.
#define TMCC160_HALL_INVERT_SHIFT                       0 // min.: 0, max.: 1, default: 0
#define TMCC160_HALL_INTERPOLATION_MASK                 0xFF // HALL_INTERPOLATION // Select hall interpolation to interpolate the 16-bit FOC commutation angle between hall states.
#define TMCC160_HALL_INTERPOLATION_SHIFT                0 // min.: 0, max.: 1, default: 0
#define TMCC160_ENCODER_STEPS_MASK                      0xFFFF // ENCODER_STEPS // Encoder steps per full motor rotation.
#define TMCC160_ENCODER_STEPS_SHIFT                     0 // min.: 0, max.: 65535, default: 0
#define TMCC160_ENCODER_OFFSET_MASK                     0xFFFF // ENCODER_OFFSET // This value represents the internal commutation offset. (0...max. encoder steps per rotation).
#define TMCC160_ENCODER_OFFSET_SHIFT                    0 // min.: 0, max.: 65535, default: 0
#define TMCC160_ENCODER_DIRECTION_MASK                  0xFF // ENCODER_DIRECTION // Set the encoder direction in a way, that ROR increases position counter.
#define TMCC160_ENCODER_DIRECTION_SHIFT                 0 // min.: 0, max.: 1, default: 0
#define TMCC160_ENCODER_INIT_MODE_MASK                  0xFF // ENCODER_INIT_MODE // Select an encoder init mode that fits best to your motor's sensors.
#define TMCC160_ENCODER_INIT_MODE_SHIFT                 0 // min.: 0, max.: 2, default: 0
#define TMCC160_ENCODER_INIT_VELOCITY_MASK              0xFFFFFFFF // ENCODER_INIT_VELOCITY // Init velocity for encoder initialization with mode 2.
#define TMCC160_ENCODER_INIT_VELOCITY_SHIFT             0 // min.: -200000, max.: 200000, default: 0
#define TMCC160_ENCODER_INIT_DELAY_MASK                 0xFFFF // ENCODER_INIT_DELAY // Duration for sine initialization sequence. This parameter should be set in a way, that the motor has stopped mechanical oscillations after the specified time.
#define TMCC160_ENCODER_INIT_DELAY_SHIFT                0 // min.: 0, max.: 10000, default: 0
#define TMCC160_COMMUTATION_MODE_MASK                   0xFF // COMMUTATION_MODE // Select a commutation mode that fits best to your motor's sensors.
#define TMCC160_COMMUTATION_MODE_SHIFT                  0 // min.: 0, max.: 8, default: 0
#define TMCC160_MOTION_MODE_MASK                        0xFF // MOTION_MODE // Actual motion mode.
#define TMCC160_MOTION_MODE_SHIFT                       0 // min.: 0, max.: 3, default: 0
#define TMCC160_BLDC_RE_INIT_MASK                       0xFF // BLDC_RE_INIT // Reinit bldc regulation.
#define TMCC160_BLDC_RE_INIT_SHIFT                      0 // min.: 0, max.: 1, default: 0
#define TMCC160_ANGLE_HALL_MASK                         0xFFFF // ANGLE_HALL // Actual hall angle value.
#define TMCC160_ANGLE_HALL_SHIFT                        0 // min.: -32768, max.: 32767, default: 0
#define TMCC160_ANGLE_ENCODER_MASK                      0xFFFF // ANGLE_ENCODER // Actual encoder angle value.
#define TMCC160_ANGLE_ENCODER_SHIFT                     0 // min.: -32768, max.: 32767, default: 0
#define TMCC160_ANGLE_CONTROLLED_MASK                   0xFFFF // ANGLE_CONTROLLED // Actual controlled angle value.
#define TMCC160_ANGLE_CONTROLLED_SHIFT                  0 // min.: -32768, max.: 32767, default: 0
#define TMCC160_CURRENT_MAX_MASK                        0xFFFFFFFF // CURRENT_MAX // Max. allowed absolute motor current. *This value can be temporarily exceeded marginal due to the operation of the current regulator.
#define TMCC160_CURRENT_MAX_SHIFT                       0 // min.: 0, max.: 90000, default: 0
#define TMCC160_CURRENT_CONTROLLED_MASK                 0xFFFFFFFF // CURRENT_CONTROLLED // Motor current for controlled commutation. This parameter is used in commutation mode 8.
#define TMCC160_CURRENT_CONTROLLED_SHIFT                0 // min.: 0, max.: 90000, default: 0
#define TMCC160_CURRENT_ACTUAL_MASK                     0xFFFFFFFF // CURRENT_ACTUAL // The actual motor current.
#define TMCC160_CURRENT_ACTUAL_SHIFT                    0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_CURRENT_TARGET_MASK                     0xFFFFFFFF // CURRENT_TARGET // Get desired target current or set target current to activate current regulation mode. (+= turn motor in right direction; -= turn motor in left direction)
#define TMCC160_CURRENT_TARGET_SHIFT                    0 // min.: -90000, max.: 90000, default: 0
#define TMCC160_CURRENT_LOOP_DELAY_MASK                 0xFF // CURRENT_LOOP_DELAY // Delay of the current regulator.
#define TMCC160_CURRENT_LOOP_DELAY_SHIFT                0 // min.: 0, max.: 10, default: 0
#define TMCC160_CURRENT_P_MASK                          0xFFFF // CURRENT_P // P parameter for current PID regulator.
#define TMCC160_CURRENT_P_SHIFT                         0 // min.: 0, max.: 65535, default: 0
#define TMCC160_CURRENT_I_MASK                          0xFFFF // CURRENT_I // I parameter for current PID regulator.
#define TMCC160_CURRENT_I_SHIFT                         0 // min.: 0, max.: 65535, default: 0
#define TMCC160_CURRENT_ERROR_MASK                      0xFFFFFFFF // CURRENT_ERROR // Actual error of current PID regulator.
#define TMCC160_CURRENT_ERROR_SHIFT                     0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_CURRENT_ERROR_SUM_MASK                  0xFFFFFFFF // CURRENT_ERROR_SUM // Sum of errors of current PID regulator.
#define TMCC160_CURRENT_ERROR_SUM_SHIFT                 0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_FLUX_ERROR_MASK                         0xFFFFFFFF // FLUX_ERROR // Actual error of flux PID regulator.
#define TMCC160_FLUX_ERROR_SHIFT                        0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_FLUX_ERROR_SUM_MASK                     0xFFFFFFFF // FLUX_ERROR_SUM // Sum of errors of flux PID regulator.
#define TMCC160_FLUX_ERROR_SUM_SHIFT                    0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_DUAL_SHUNT_FACTOR_MASK                  0xFFFFFFFF // DUAL_SHUNT_FACTOR // Manually adjust the dual shunt current measurement factor.
#define TMCC160_DUAL_SHUNT_FACTOR_SHIFT                 0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_VELOCITY_MAX_MASK                       0xFFFFFFFF // VELOCITY_MAX // Max. absolute velocity for velocity and positioning mode.
#define TMCC160_VELOCITY_MAX_SHIFT                      0 // min.: 0, max.: 200000, default: 0
#define TMCC160_VELOCITY_HALTED_MASK                    0xFFFFFFFF // VELOCITY_HALTED // If the actual velocity is below this value the motor halted flag will be set.
#define TMCC160_VELOCITY_HALTED_SHIFT                   0 // min.: 0, max.: 200000, default: 0
#define TMCC160_VELOCITY_ACTUAL_MASK                    0xFFFFFFFF // VELOCITY_ACTUAL // The actual velocity of the motor.
#define TMCC160_VELOCITY_ACTUAL_SHIFT                   0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_VELOCITY_TARGET_MASK                    0xFFFFFFFF // VELOCITY_TARGET // The desired target velocity.
#define TMCC160_VELOCITY_TARGET_SHIFT                   0 // min.: -200000, max.: 200000, default: 0
#define TMCC160_VELOCITY_LOOP_DELAY_MASK                0xFF // VELOCITY_LOOP_DELAY // Delay of the position and velocity regulator.
#define TMCC160_VELOCITY_LOOP_DELAY_SHIFT               0 // min.: 0, max.: 20, default: 0
#define TMCC160_VELOCITY_P_MASK                         0xFFFF // VELOCITY_P // P parameter for velocity PID regulator.
#define TMCC160_VELOCITY_P_SHIFT                        0 // min.: 0, max.: 65535, default: 0
#define TMCC160_VELOCITY_I_MASK                         0xFFFF // VELOCITY_I // I parameter for velocity PID regulator.
#define TMCC160_VELOCITY_I_SHIFT                        0 // min.: 0, max.: 65535, default: 0
#define TMCC160_VELOCITY_ERROR_MASK                     0xFFFFFFFF // VELOCITY_ERROR // Actual error of velocity PID regulator.
#define TMCC160_VELOCITY_ERROR_SHIFT                    0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_VELOCITY_ERROR_SUM_MASK                 0xFFFFFFFF // VELOCITY_ERROR_SUM // Sum of errors of velocity PID regulator.
#define TMCC160_VELOCITY_ERROR_SUM_SHIFT                0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_RAMP_ACTIVATED_MASK                     0xFF // RAMP_ACTIVATED // An activated ramp allows a defined acceleration for velocity and position mode.
#define TMCC160_RAMP_ACTIVATED_SHIFT                    0 // min.: 0, max.: 1, default: 0
#define TMCC160_RAMP_ACCELERATION_MASK                  0xFFFFFFFF // RAMP_ACCELERATION // Acceleration parameter for ROL, ROR, and the velocity ramp of MVP.
#define TMCC160_RAMP_ACCELERATION_SHIFT                 0 // min.: 0, max.: 100000, default: 0
#define TMCC160_RAMP_ACTUAL_VELOCITY_MASK               0xFFFFFFFF // RAMP_ACTUAL_VELOCITY // The actual velocity of the velocity ramp used for positioning and velocity mode.
#define TMCC160_RAMP_ACTUAL_VELOCITY_SHIFT              0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_POSITION_ACTUAL_MASK                    0xFFFFFFFF // POSITION_ACTUAL // The actual position counter.
#define TMCC160_POSITION_ACTUAL_SHIFT                   0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_POSITION_TARGET_ABS_MASK                0xFFFFFFFF // POSITION_TARGET_ABS // The target position of a currently executed ramp (absolute position commanded).
#define TMCC160_POSITION_TARGET_ABS_SHIFT               0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_POSITION_TARGET_REL_MASK                0xFFFFFFFF // POSITION_TARGET_REL // The target position of a currently executed ramp (relative position commanded).
#define TMCC160_POSITION_TARGET_REL_SHIFT               0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_POSITION_P_MASK                         0xFFFF // POSITION_P // P parameter for position PID regulator.
#define TMCC160_POSITION_P_SHIFT                        0 // min.: 0, max.: 65535, default: 0
#define TMCC160_POSITION_ERROR_MASK                     0xFFFFFFFF // POSITION_ERROR // Actual error of position PID regulator.
#define TMCC160_POSITION_ERROR_SHIFT                    0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_POSITION_TARGET_REACHED_VELOCITY_MASK   0xFFFFFFFF // POSITION_TARGET_REACHED_VELOCITY // Max. velocity at which end position flag can be set. Prevents issuing of end position flag when the target is passed at high velocity.
#define TMCC160_POSITION_TARGET_REACHED_VELOCITY_SHIFT  0 // min.: 0, max.: 200000, default: 0
#define TMCC160_POSITION_TARGET_REACHED_DISTANCE_MASK   0xFFFFFFFF // POSITION_TARGET_REACHED_DISTANCE // Maximum distance at which the position end flag is set.
#define TMCC160_POSITION_TARGET_REACHED_DISTANCE_SHIFT  0 // min.: 0, max.: 100000, default: 0
#define TMCC160_ENCODER_SET_NULL_MASK                   0xFF // ENCODER_SET_NULL // Clear the position counter on encoder N channel.
#define TMCC160_ENCODER_SET_NULL_SHIFT                  0 // min.: 0, max.: 1, default: 0
#define TMCC160_ENCODER_CLEAR_SET_NULL_MASK             0xFF // ENCODER_CLEAR_SET_NULL // Clear the position counter on encoder N channel only once.
#define TMCC160_ENCODER_CLEAR_SET_NULL_SHIFT            0 // min.: 0, max.: 1, default: 0
#define TMCC160_DRIVER_DIAGNOSTIC_MASK                  0xFFFF // DRIVER_DIAGNOSTIC // Actual driver diagnostic value.
#define TMCC160_DRIVER_DIAGNOSTIC_SHIFT                 0 // min.: 0, max.: 1000, default: 0
#define TMCC160_DRIVER_ACKNOWLEDGE_MASK                 0xFF // DRIVER_ACKNOWLEDGE // Acknowledge driver status.
#define TMCC160_DRIVER_ACKNOWLEDGE_SHIFT                0 // min.: 0, max.: 1, default: 0
#define TMCC160_DRIVER_ENABLE_SPI_MASK                  0xFF // DRIVER_ENABLE_SPI // Disables the driver and initializes the driver SPI access.
#define TMCC160_DRIVER_ENABLE_SPI_SHIFT                 0 // min.: 0, max.: 1, default: 0
#define TMCC160_DRIVER_STATUS_REGISTER_2_MASK           0xFFFF // DRIVER_STATUS_REGISTER_2 // Driver status register 2.
#define TMCC160_DRIVER_STATUS_REGISTER_2_SHIFT          0 // min.: 0, max.: 65535, default: 0
#define TMCC160_DRIVER_STATUS_REGISTER_3_MASK           0xFFFF // DRIVER_STATUS_REGISTER_3 // Driver status register 3.
#define TMCC160_DRIVER_STATUS_REGISTER_3_SHIFT          0 // min.: 0, max.: 65535, default: 0
#define TMCC160_DRIVER_STATUS_REGISTER_4_MASK           0xFFFF // DRIVER_STATUS_REGISTER_4 // Driver status register 4.
#define TMCC160_DRIVER_STATUS_REGISTER_4_SHIFT          0 // min.: 0, max.: 65535, default: 0
#define TMCC160_BRAKE_ENABLED_MASK                      0xFF // BRAKE_ENABLED // Enable brake chopper functionality.
#define TMCC160_BRAKE_ENABLED_SHIFT                     0 // min.: 0, max.: 1, default: 0
#define TMCC160_BRAKE_VOLTAGE_LIMIT_MASK                0xFFFF // BRAKE_VOLTAGE_LIMIT // If the brake chopper is enabled and supply voltage exceeds this value, the brake chopper output will be activated.
#define TMCC160_BRAKE_VOLTAGE_LIMIT_SHIFT               0 // min.: 50, max.: 480, default: 0
#define TMCC160_BRAKE_HYSTERESIS_MASK                   0xFFFF // BRAKE_HYSTERESIS // An activated brake chopper will be disabled if the actual supply voltage is lower than (limit voltage-hysteresis).
#define TMCC160_BRAKE_HYSTERESIS_SHIFT                  0 // min.: 0, max.: 50, default: 0
#define TMCC160_IIT_TIME_MASK                           0xFFFFFFFF // IIT_TIME // Thermal winding time constant for the used motor. Used for IIt monitoring.
#define TMCC160_IIT_TIME_SHIFT                          0 // min.: 0, max.: 300000, default: 0
#define TMCC160_IIT_LIMIT_MASK                          0xFFFFFFFF // IIT_LIMIT // An actual IIt sum that exceeds this limit leads to increasing the IIt exceed counter.
#define TMCC160_IIT_LIMIT_SHIFT                         0 // min.: 0, max.: 270000000, default: 0
#define TMCC160_IIT_SUM_MASK                            0xFFFFFFFF // IIT_SUM // Actual sum of the IIt monitor.
#define TMCC160_IIT_SUM_SHIFT                           0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_IIT_EXCEEDED_COUNTER_MASK               0xFFFFFFFF // IIT_EXCEEDED_COUNTER // Counts how often an IIt sum was higher than the IIt limit.
#define TMCC160_IIT_EXCEEDED_COUNTER_SHIFT              0 // min.: 0, max.: 4294967295, default: 0
#define TMCC160_IIT_CLEAR_EXCEEDED_MASK                 0xFF // IIT_CLEAR_EXCEEDED // Clear the flag that indicates that the IIt sum has exceeded the IIt limit.
#define TMCC160_IIT_CLEAR_EXCEEDED_SHIFT                0 // min.: 0, max.: 1, default: 0
#define TMCC160_SINGLE_SHUNT_ENABLED_MASK               0xFF // SINGLE_SHUNT_ENABLED // Use single shunt measurement for block commutation.
#define TMCC160_SINGLE_SHUNT_ENABLED_SHIFT              0 // min.: 0, max.: 1, default: 0
#define TMCC160_SINGLE_SHUNT_OFFSET_MASK                0xFFFF // SINGLE_SHUNT_VREF_OFFSET // Manually set/get the single-shunt offset.
#define TMCC160_SINGLE_SHUNT_OFFSET_SHIFT               0 // min.: 0, max.: 4096, default: 0
#define TMCC160_SINGLE_SHUNT_VREF_MASK                  0xFFFF0000 // SINGLE_SHUNT_VREF_OFFSET // Manually set/get the single-shunt reference voltage.
#define TMCC160_SINGLE_SHUNT_VREF_SHIFT                 16 // min.: 0, max.: 4096, default: 0
#define TMCC160_SINGLE_SHUNT_FACTOR_MASK                0xFFFFFFFF // SINGLE_SHUNT_FACTOR // Manually adjust the single shunt current measurement factor.
#define TMCC160_SINGLE_SHUNT_FACTOR_SHIFT               0 // min.: 0, max.: 2147483647, default: 0
#define TMCC160_ADC_PHASE_B_MASK                        0xFFFF // ADC_PHASE_A_B // ADC value of phase B.
#define TMCC160_ADC_PHASE_B_SHIFT                       0 // min.: 0, max.: 4095, default: 0
#define TMCC160_ADC_PHASE_A_MASK                        0xFFFF0000 // ADC_PHASE_A_B // ADC value of phase A.
#define TMCC160_ADC_PHASE_A_SHIFT                       16 // min.: 0, max.: 4095, default: 0
#define TMCC160_ADC_SINGLE_SHUNT_MASK                   0xFFFF // ADC_SINGLE_SHUNT // ADC value of single shunt current measurement.
#define TMCC160_ADC_SINGLE_SHUNT_SHIFT                  0 // min.: 0, max.: 4095, default: 0
#define TMCC160_ADC_TEMP_MASK                           0xFFFF // ADC_VSUPPLY_TEMP // ADC value of temperature measurement.
#define TMCC160_ADC_TEMP_SHIFT                          0 // min.: 0, max.: 4095, default: 0
#define TMCC160_ADC_VSUPPLY_MASK                        0xFFFF0000 // ADC_VSUPPLY_TEMP // ADC value of supply voltage measurement.
#define TMCC160_ADC_VSUPPLY_SHIFT                       16 // min.: 0, max.: 4095, default: 0
#define TMCC160_ENABLE_INPUT_MASK                       0x01 // ANALOG_DIGITAL_INPUTS // Digital input ENABLE.
#define TMCC160_ENABLE_INPUT_SHIFT                      0 // min.: 0, max.: 1, default: 0
#define TMCC160_REF_R_INPUT_MASK                        0x02 // ANALOG_DIGITAL_INPUTS // Digital input REF_R.
#define TMCC160_REF_R_INPUT_SHIFT                       1 // min.: 0, max.: 1, default: 0
#define TMCC160_REF_L_INPUT_MASK                        0x04 // ANALOG_DIGITAL_INPUTS // Digital input REF_L.
#define TMCC160_REF_L_INPUT_SHIFT                       2 // min.: 0, max.: 1, default: 0
#define TMCC160_ANALOG_INPUT_0_MASK                     0xFFFF0000 // ANALOG_DIGITAL_INPUTS // ADC value of analog input 0.
#define TMCC160_ANALOG_INPUT_0_SHIFT                    16 // min.: 0, max.: 4095, default: 0
#define TMCC160_USER_VARIABLE_ADDRESS_MASK              0xFF // USER_VARIABLE_ADDRESS // Address of the actual selected user variable.
#define TMCC160_USER_VARIABLE_ADDRESS_SHIFT             0 // min.: 0, max.: 255, default: 0
#define TMCC160_USER_VARIABLE_VALUE_MASK                0xFFFFFFFF // USER_VARIABLE_VALUE // Value of the actual selected user variable.
#define TMCC160_USER_VARIABLE_VALUE_SHIFT               0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_TMCL_REQUEST_BYTE_3_MASK                0xFF // TMCL_REQUEST_BYTE_0123 // Error
#define TMCC160_TMCL_REQUEST_BYTE_3_SHIFT               0 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REQUEST_BYTE_2_MASK                0xFF00 // TMCL_REQUEST_BYTE_0123 // Motor
#define TMCC160_TMCL_REQUEST_BYTE_2_SHIFT               8 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REQUEST_BYTE_1_MASK                0xFF0000 // TMCL_REQUEST_BYTE_0123 // Type
#define TMCC160_TMCL_REQUEST_BYTE_1_SHIFT               16 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REQUEST_BYTE_0_MASK                0xFF000000 // TMCL_REQUEST_BYTE_0123 // Command
#define TMCC160_TMCL_REQUEST_BYTE_0_SHIFT               24 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REQUEST_BYTE_4567_MASK             0xFFFFFFFF // TMCL_REQUEST_BYTE_4567 // Value
#define TMCC160_TMCL_REQUEST_BYTE_4567_SHIFT            0 // min.: -2147483648, max.: 2147483647, default: 0
#define TMCC160_TMCL_REPLY_BYTE_3_MASK                  0xFF // TMCL_REPLY_BYTE_0123 // Error
#define TMCC160_TMCL_REPLY_BYTE_3_SHIFT                 0 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REPLY_BYTE_2_MASK                  0xFF00 // TMCL_REPLY_BYTE_0123 // Motor
#define TMCC160_TMCL_REPLY_BYTE_2_SHIFT                 8 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REPLY_BYTE_1_MASK                  0xFF0000 // TMCL_REPLY_BYTE_0123 // Type
#define TMCC160_TMCL_REPLY_BYTE_1_SHIFT                 16 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REPLY_BYTE_0_MASK                  0xFF000000 // TMCL_REPLY_BYTE_0123 // Command
#define TMCC160_TMCL_REPLY_BYTE_0_SHIFT                 24 // min.: 0, max.: 255, default: 0
#define TMCC160_TMCL_REPLY_BYTE_4567_MASK               0xFFFFFFFF // TMCL_REPLY_BYTE_4567 // Value
#define TMCC160_TMCL_REPLY_BYTE_4567_SHIFT              0 // min.: -2147483648, max.: 2147483647, default: 0

#endif /* TMCC160_FIELDS_H */
