Archive member included because of file (symbol)

c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
                              FAT32.o (__mulsi3)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
                              FAT32.o (__udivmodsi4)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                              c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                              FAT32.o (__do_copy_data)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                              FAT32.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

appendFileLocation  0x4               FAT32.o
firstDataSector     0x4               FAT32.o
fileSize            0x4               FAT32.o
bytesPerSector      0x2               FAT32.o
totalClusters       0x4               FAT32.o
rootCluster         0x4               FAT32.o
startBlock          0x4               FAT32.o
buffer              0x200             FAT32.o
sectorPerCluster    0x2               FAT32.o
unusedSectors       0x4               FAT32.o
SDHC_flag           0x1               FAT32.o
totalBlocks         0x4               FAT32.o
reservedSectorCount
                    0x2               FAT32.o
appendStartCluster  0x4               FAT32.o
cardType            0x1               FAT32.o
freeClusterCountUpdated
                    0x1               FAT32.o
appendFileSector    0x4               FAT32.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
LOAD FAT32.o
LOAD SD_main.o
LOAD SD_routines.o
LOAD SPI_routines.o
LOAD UART_routines.o
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x27aa
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054      0x16d FAT32.o
 .progmem.data  0x000001c1      0x31b SD_main.o
                0x000004dc                . = ALIGN (0x2)
                0x000004dc                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000004dc        0x0 linker stubs
 *(.trampolines*)
                0x000004dc                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000004dc                __ctors_start = .
 *(.ctors)
                0x000004dc                __ctors_end = .
                0x000004dc                __dtors_start = .
 *(.dtors)
                0x000004dc                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000004dc        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x000004dc                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000004dc        0xc c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000004e8       0x16 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                0x000004e8                __do_copy_data
 .init4         0x000004fe       0x10 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x000004fe                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000050e        0x8 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000516        0x4 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x00000516                __vector_1
                0x00000516                __vector_12
                0x00000516                __bad_interrupt
                0x00000516                __vector_6
                0x00000516                __vector_3
                0x00000516                __vector_11
                0x00000516                __vector_13
                0x00000516                __vector_17
                0x00000516                __vector_19
                0x00000516                __vector_7
                0x00000516                __vector_5
                0x00000516                __vector_4
                0x00000516                __vector_9
                0x00000516                __vector_2
                0x00000516                __vector_15
                0x00000516                __vector_8
                0x00000516                __vector_14
                0x00000516                __vector_10
                0x00000516                __vector_16
                0x00000516                __vector_18
                0x00000516                __vector_20
 .text          0x0000051a     0x173e FAT32.o
                0x00000e52                getSetNextCluster
                0x00001342                readFile
                0x00000a26                memoryStatistics
                0x00000632                convertFileName
                0x00000856                getSetFreeCluster
                0x00001326                deleteFile
                0x00000742                searchNextFreeCluster
                0x000014e4                writeFile
                0x00000964                freeMemoryUpdate
                0x00000c86                getBootSectorData
                0x00000f4c                findFiles
                0x0000051a                getFirstSector
                0x00000564                displayMemory
 .text          0x00001c58      0x684 SD_main.o
                0x00001c58                port_init
                0x00001c70                init_devices
                0x00001c98                main
 .text          0x000022dc      0x348 SD_routines.o
                0x000023b4                SD_erase
                0x0000241a                SD_writeSingleBlock
                0x000022dc                SD_sendCommand
                0x000024b6                SD_readSingleBlock
                0x00002518                SD_init
 .text          0x00002624       0x1e SPI_routines.o
                0x0000262c                SPI_transmit
                0x00002624                spi_init
                0x00002636                SPI_receive
 .text          0x00002642       0xe2 UART_routines.o
                0x00002660                transmitByte
                0x000026fc                transmitString_F
                0x00002668                transmitHex
                0x00002642                uart0_init
                0x00002710                transmitString
                0x00002656                receiveByte
 .text          0x00002724        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
 .text          0x00002724        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00002724        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text          0x00002724        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text          0x00002724        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x00002724                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00002724       0x3e c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
                0x00002724                __mulsi3
 .text.libgcc   0x00002762       0x44 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
                0x00002762                __udivmodsi4
 .text.libgcc   0x000027a6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000027a6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000027a6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x000027a6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000027a6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                0x000027a6                exit
                0x000027a6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000027a6        0x4 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000027aa                _etext = .

.data           0x00800060       0x20 load address 0x000027aa
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060       0x14 FAT32.o
 .data          0x00800074        0x0 SD_main.o
 .data          0x00800074        0x0 SD_routines.o
 .data          0x00800074        0x0 SPI_routines.o
 .data          0x00800074        0xb UART_routines.o
 .data          0x0080007f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
 .data          0x0080007f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x0080007f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .data          0x0080007f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .data          0x0080007f        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800080                . = ALIGN (0x2)
 *fill*         0x0080007f        0x1 00
                0x00800080                _edata = .
                0x00800080                PROVIDE (__data_end, .)

.bss            0x00800080      0x231
                0x00800080                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800080        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800080        0x0 FAT32.o
 .bss           0x00800080        0x0 SD_main.o
 .bss           0x00800080        0x0 SD_routines.o
 .bss           0x00800080        0x0 SPI_routines.o
 .bss           0x00800080        0x0 UART_routines.o
 .bss           0x00800080        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
 .bss           0x00800080        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800080        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .bss           0x00800080        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800080        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800080      0x231 FAT32.o
                0x00800080                appendFileLocation
                0x00800084                firstDataSector
                0x00800088                fileSize
                0x0080008c                bytesPerSector
                0x0080008e                totalClusters
                0x00800092                rootCluster
                0x00800096                startBlock
                0x0080009a                buffer
                0x0080029a                sectorPerCluster
                0x0080029c                unusedSectors
                0x008002a0                SDHC_flag
                0x008002a1                totalBlocks
                0x008002a5                reservedSectorCount
                0x008002a7                appendStartCluster
                0x008002ab                cardType
                0x008002ac                freeClusterCountUpdated
                0x008002ad                appendFileSector
                0x008002b1                PROVIDE (__bss_end, .)
                0x000027aa                __data_load_start = LOADADDR (.data)
                0x000027ca                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002b1        0x0
                0x008002b1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002b1                PROVIDE (__noinit_end, .)
                0x008002b1                _end = .
                0x008002b1                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 FAT32.o
 .debug_aranges
                0x00000020       0x20 SD_main.o
 .debug_aranges
                0x00000040       0x20 SD_routines.o
 .debug_aranges
                0x00000060       0x20 SPI_routines.o
 .debug_aranges
                0x00000080       0x20 UART_routines.o

.debug_pubnames
                0x00000000      0x521
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x242 FAT32.o
 .debug_pubnames
                0x00000242      0x173 SD_main.o
 .debug_pubnames
                0x000003b5       0xb2 SD_routines.o
 .debug_pubnames
                0x00000467       0x40 SPI_routines.o
 .debug_pubnames
                0x000004a7       0x7a UART_routines.o

.debug_info     0x00000000     0x1c94
 *(.debug_info)
 .debug_info    0x00000000      0xf75 FAT32.o
 .debug_info    0x00000f75      0x749 SD_main.o
 .debug_info    0x000016be      0x289 SD_routines.o
 .debug_info    0x00001947       0xc6 SPI_routines.o
 .debug_info    0x00001a0d      0x287 UART_routines.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x666
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1fd FAT32.o
 .debug_abbrev  0x000001fd      0x19b SD_main.o
 .debug_abbrev  0x00000398       0xbf SD_routines.o
 .debug_abbrev  0x00000457       0x8d SPI_routines.o
 .debug_abbrev  0x000004e4      0x182 UART_routines.o

.debug_line     0x00000000     0x179c
 *(.debug_line)
 .debug_line    0x00000000      0xae5 FAT32.o
 .debug_line    0x00000ae5      0x64f SD_main.o
 .debug_line    0x00001134      0x3ac SD_routines.o
 .debug_line    0x000014e0       0xc6 SPI_routines.o
 .debug_line    0x000015a6      0x1f6 UART_routines.o

.debug_frame    0x00000000      0x230
 *(.debug_frame)
 .debug_frame   0x00000000       0xe0 FAT32.o
 .debug_frame   0x000000e0       0x40 SD_main.o
 .debug_frame   0x00000120       0x60 SD_routines.o
 .debug_frame   0x00000180       0x40 SPI_routines.o
 .debug_frame   0x000001c0       0x70 UART_routines.o

.debug_str      0x00000000      0x86f
 *(.debug_str)
 .debug_str     0x00000000      0x6b2 FAT32.o
                                0x6f9 (size before relaxing)
 .debug_str     0x000006b2       0x80 SD_main.o
                                0x247 (size before relaxing)
 .debug_str     0x00000732       0x6c SD_routines.o
                                0x163 (size before relaxing)
 .debug_str     0x0000079e       0x34 SPI_routines.o
                                 0xf2 (size before relaxing)
 .debug_str     0x000007d2       0x9d UART_routines.o
                                0x176 (size before relaxing)

.debug_loc      0x00000000     0x15a3
 *(.debug_loc)
 .debug_loc     0x00000000      0xf50 FAT32.o
 .debug_loc     0x00000f50      0x1ea SD_main.o
 .debug_loc     0x0000113a      0x2e7 SD_routines.o
 .debug_loc     0x00001421       0x26 SPI_routines.o
 .debug_loc     0x00001447      0x15c UART_routines.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SD_Card.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x48 UART_routines.o
